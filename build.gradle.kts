/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    java
    signing
    checkstyle
    `maven-publish`
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.github.gradle-nexus.publish-plugin") version "1.0.0"
    id("se.bjurr.gitchangelog.git-changelog-gradle-plugin") version "1.71.4"
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo1.maven.org/maven2")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

checkstyle {
    toolVersion = "8.41.1"
    configFile = file("config/checkstyle/google_checks.xml")
    isIgnoreFailures = true
}

dependencies {
    implementation("com.hierynomus", "sshj", "0.34.0")
    implementation("org.slf4j", "slf4j-api", "1.7.30")
    testImplementation("org.postgresql", "postgresql", "42.2.19")
    testImplementation("ch.qos.logback", "logback-classic", "1.2.3")
    testImplementation("mysql", "mysql-connector-java", "8.0.23")
    testImplementation("com.h2database", "h2", "1.4.200")
    testImplementation("org.apache.derby", "derby", "10.15.2.0")
    testImplementation("org.apache.derby", "derbynet", "10.15.2.0")
    testImplementation("org.apache.derby", "derbyclient", "10.15.2.0")
    testImplementation("org.apache.sshd", "sshd-core", "2.6.0")
    testImplementation("org.bouncycastle", "bcpg-jdk15on", "1.68")
    testImplementation("org.bouncycastle", "bcpkix-jdk15on", "1.68")
    testImplementation("org.testng", "testng", "7.4.0")
}

group = "io.github.emotionbug"
version = "1.0.14"
description = "JDBC over SSH"
java.sourceCompatibility = JavaVersion.VERSION_1_8


publishing {
    publications {
        create<MavenPublication>("mavenJava") {
            from(components["java"])

            pom {
                name.set("jdbc-sshj")
                description.set("JDBC over SSH")
                url.set("https://github.com/emotionbug/jdbc-sshj")
                licenses {
                    license {
                        name.set("The Apache Software License, Version 2.0")
                        url.set("https://www.apache.org/licenses/LICENSE-2.0.txt")
                        distribution.set("repo")
                    }
                }
                developers {
                    developer {
                        id.set("emotionbug")
                        name.set("emotionbug")
                    }
                }

                issueManagement {
                    url.set("https://github.com/emotionbug/jdbc-sshj/issues")
                    system.set("GitHub Issues")
                }

                scm {
                    connection.set("scm:git:git:github.com/emotionbug/jdbc-sshj.git")
                    developerConnection.set("scm:git:git@github.com:emotionbug/jdbc-sshj.git")
                    url.set("https://github.com/emotionbug/jdbc-sshj")
                }
            }
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

signing {
    sign(publishing.publications)
}

nexusPublishing {
    repositories {
        create("Sonatype") {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

tasks.test {
    useTestNG()
}

val gitChangelogTask by tasks.registering(se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask::class) {
    fromRepo = "$projectDir"
    file = File(projectDir, "CHANGELOG.md")
    templateContent = file("CHANGELOG.template").readText()
}
